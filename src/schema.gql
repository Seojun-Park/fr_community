# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type MeetMember {
  MeetId: Int!
  UserId: Int!
  loggedInAt: String
  Meet: Meet!
  User: User!
}

type Meet {
  id: Int!
  title: String!
  content: String!

  """
  category type class / meetup
  """
  category: String!
  price: String
  period: String
  location: String
  maximum: String
  OwnerId: Int!
  createdAt: String!
  updatedAt: String!
  deletedAt: String
  Owner: User!
  MeetMember: [MeetMember!]
  Likes: [Like!]
}

type Recruit {
  id: Int!
  title: String!
  content: String!
  period: String!
  location: String!
  salary: String!

  """
  recruting type hiring / searching / done
  """
  type: String!
  OwnerId: Int!
  createdAt: String!
  updatedAt: String!
  deletedAt: String
  Owner: User!
  Likes: [Like!]
}

type Rent {
  id: Int!
  title: String!
  content: String!
  price: String!
  deposit: String!

  """
  type of residence such as studio / apartment / house
  """
  type: String!

  """
  rent period such as long / short
  """
  term: String!

  """
  heat type such as central / individual
  """
  heatType: String!
  square: String!
  address: String!

  """
  form of residence single / colocation / sous-location
  """
  option: String!
  allocation: Boolean!
  proof: Boolean!
  commission: Boolean!
  guarantor: Boolean!
  availableFrom: String!
  thumbnail: String
  UserId: Int!
  createdAt: String!
  updatedAt: String!
  deletedAt: String
  Images: [Image!]!
  User: User!
  Likes: Like
}

type Like {
  id: Int!
  OwnerId: Int!
  Boards: [Board!]
  Markets: [Market!]
  Meets: [Meet!]
  Recruits: [Recruit!]
  Rents: [Rent!]
  createdAt: String!
  updatedAt: String!
  deletedAt: String
  Owner: User!
}

type Market {
  id: Int!
  title: String!
  content: String!
  UserId: Int!

  """
  euro currency
  """
  price: String!
  location: String!

  """
  deal type buy / sell
  """
  type: String!

  """
  deal status sold / onSale
  """
  status: String!
  thumbnail: String
  createdAt: String!
  updatedAt: String!
  deletedAt: String
  User: User!
  Images: [Image!]
  Likes: [Like!]
}

type Image {
  id: Int!
  url: String!
  MarketId: Int
  RentId: Int
  BoardId: Int
  createdAt: String!
  updatedAt: String!
  deletedAt: String
  Market: Market!
}

type Reply {
  id: Int!
  content: String!
  createdAt: String!
  updatedAt: String!
  deletedAt: String
  BoardId: Int!
  Board: Board!
  UserId: User!
  User: User!
}

type Board {
  id: Int!
  title: String!
  content: String!
  category: String!
  createdAt: String!
  updatedAt: String!
  WriterId: Int!
  deletedAt: String
  Writer: User!
  Replies: [Reply!]
  Images: [Image!]
  Likes: [Like!]
}

type Dm {
  id: Int!
  content: String!
  createdAt: String!
  updatedAt: String!
  deletedAt: String
  SenderId: Float
  ReceiverId: Float
  ChatId: Int!
  Sender: User
  Receiver: User
  Chat: Chat!
}

type Chat {
  id: Int!
  createdAt: String!
  updatedAt: String!
  deletedAt: String
  Members: [User!]!
  messages: [Dm!]
  Member1: Int
  Member2: Int
}

type User {
  id: Int!
  firstName: String!
  lastName: String!
  email: String!
  verified: Boolean!
  verifiedCode: String
  password: String!
  nickname: String!
  avatar: String
  createdAt: String!
  updatedAt: String!
  deletedAt: String
  Board: [Board!]
  Market: [Market!]
  Rent: [Rent!]
  AsSender: [Dm!]
  AsReceiver: [Dm!]
  Replies: [Reply!]
  Recruits: [Recruit!]
  Meets: [Meet!]
  MeetMember: [MeetMember!]
  Chats: [Chat!]
  Like: Like!
}

type UserReturn {
  success: Boolean!
  error: String
  data: User
}

type UsersReturn {
  success: Boolean!
  error: String
  data: [User!]
}

type TokenReturn {
  success: Boolean!
  error: String
  token: String
}

type BoardReturn {
  success: Boolean!
  error: String
  data: Board
}

type BoardsReturn {
  success: Boolean!
  error: String
  data: [Board!]
}

type MarketReturn {
  success: Boolean!
  error: String
  data: Market
}

type MarketsReturn {
  success: Boolean!
  error: String
  data: [Market!]
}

type ImageReturn {
  success: Boolean!
  error: String
}

type RentReturn {
  success: Boolean!
  error: String
  data: Rent
}

type RentsReturn {
  success: Boolean!
  error: String
  data: [Rent!]
}

type DmReturn {
  success: Boolean!
  error: String
  data: Dm
}

type DmsReturn {
  success: Boolean!
  error: String
  data: [Dm!]
}

type ChatReturn {
  success: Boolean!
  error: String
  data: Chat
}

type ChatsReturn {
  success: Boolean!
  error: String
  data: [Chat!]
}

type ChatOutReturn {
  chatId: Int!
  userId: Int!
}

type ReplyReturn {
  success: Boolean!
  error: String
  data: Reply
}

type RecruitReturn {
  success: Boolean!
  error: String
  data: Recruit
}

type RecruitsReturn {
  success: Boolean!
  error: String
  data: [Recruit!]
}

type MeetReturn {
  success: Boolean!
  error: String
  data: Meet
}

type MeetsReturn {
  success: Boolean!
  error: String
  data: [Meet!]
}

type LikeReturn {
  success: Boolean!
  error: String
  data: Like
}

type Query {
  getUser(id: Int!): UserReturn!
  getUserByEmail(email: String!): UserReturn!
  getUsers: UsersReturn!
  getMe(token: String!): UserReturn!
  searchUsers(term: String!): UsersReturn!
  getBoard(id: Int!): BoardReturn!
  getBoards: BoardsReturn!
  getMarket(id: Int!): MarketReturn!
  getMarkets: MarketsReturn!
  getRent(id: Int!): RentReturn!
  getRents: RentsReturn!
  getChatMessages(load: Int!, ChatId: Int!): DmsReturn!
  getChat(chatId: Int!): ChatReturn!
  getChats(userId: Int!): ChatsReturn!
  checkChatMember(chatId: Int!): ChatReturn!
  getRecruit(id: Int!): RecruitReturn!
  getRecruits: RecruitsReturn!
  getMeet(id: Int!): MeetReturn!
  getMeets: MeetsReturn!
  getLike(UserId: Int!): LikeReturn!
}

type Mutation {
  createUser(args: CreateUserInput!): UserReturn!
  editUser(args: EditUserInput!): UserReturn!
  verifyEmail(code: String!, email: String!): UserReturn!
  changePassword(newPassword: String!, password: String!, id: Int!): UserReturn!
  login(password: String!, email: String!): TokenReturn!
  sendNewCode(email: String!): UserReturn!
  sendNewPassword(
    lastName: String!
    firstName: String!
    email: String!
  ): UserReturn!
  createBoard(args: CreateBoardInput!): BoardReturn!
  editBoard(args: EditBoardInput!): BoardReturn!
  deleteBoard(id: Int!): BoardReturn!
  createMarket(args: CreateMarketInput!): MarketReturn!
  editMarket(args: EditMarketInput!): MarketReturn!
  deleteMarket(id: Int!): Boolean!
  deleteImage(id: Int!): ImageReturn!
  addImage(url: String!, type: String!, id: Int!): ImageReturn!
  createRent(args: CreateRentInput!): RentReturn!
  editRent(args: EditRentInput!): RentReturn!
  deleteRent(id: Int!): RentReturn!
  sendDm(args: CreateDmInput!): DmReturn!
  createChat(args: CreateChatInput!): ChatReturn!
  outChat(userId: Int!, chatId: Int!): ChatReturn!
  createReply(args: CreateReplyInput!): ReplyReturn!
  editReply(args: EditReplyInput!): ReplyReturn!
  deleteReply(id: Int!): Boolean!
  createRecruit(args: CreateRecruitInput!): RecruitReturn!
  editRecruit(args: EditRecruitInput!): RecruitReturn!
  deleteRecruit(id: Int!): RecruitReturn!
  createMeet(args: CreateMeetInput!): MeetReturn!
  editMeet(args: EditMeetInput!): MeetReturn!
  deleteMeet(id: Int!): Boolean!
  joinMeet(UserId: Int!, MeetId: Int!): Boolean!
  exitMeet(UserId: Int!, MeetId: Int!): Boolean!
  kickUserFromMeet(OwnerId: Int!, TargetId: Int!, MeetId: Int!): Boolean!
  toggleLike(UserId: Int!, type: String!, Id: Int!): LikeReturn!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  nickname: String!
  email: String!
  password: String!
}

input EditUserInput {
  id: Int!
  firstName: String
  lastName: String
  nickname: String
}

input CreateBoardInput {
  UserId: Int!
  title: String!
  content: String!
  category: String!
  images: [String!]
}

input EditBoardInput {
  boardId: Int!
  title: String
  content: String
}

input CreateMarketInput {
  UserId: Int!
  title: String!
  content: String!
  price: String!
  type: String!
  status: String!
  location: String!
  images: [String!]
}

input EditMarketInput {
  MarketId: Int!
  title: String
  content: String
  price: String
  location: String
  status: String
  type: String
}

input CreateRentInput {
  title: String!
  content: String!
  price: String!
  deposit: String!
  type: String!
  square: String!
  address: String!
  heatType: String!
  term: String!
  option: String!
  allocation: Boolean!
  availableFrom: String!
  commission: Boolean!
  guarantor: Boolean!
  proof: Boolean!
  UserId: Int!
  images: [String!]
}

input EditRentInput {
  RentId: Int!
  title: String
  content: String
  price: String
  deposit: String
  type: String
  heatType: String
  term: String
  allocation: Boolean
  availableFrom: String
  square: String
  address: String
  option: String
  proof: Boolean
  commission: Boolean
  guarantor: Boolean
}

input CreateDmInput {
  content: String!
  ChatId: Int
  SenderId: Int!
  ReceiverId: Int!
}

input CreateChatInput {
  SenderId: Int!
  ReceiverId: Int!
}

input CreateReplyInput {
  BoardId: Int!
  UserId: Int!
  content: String!
}

input EditReplyInput {
  BoardId: Int!
  content: String
}

input CreateRecruitInput {
  UserId: Int!
  title: String!
  content: String!
  period: String!
  location: String!
  salary: String!
  type: String!
}

input EditRecruitInput {
  RecruitId: Int!
  title: String
  content: String
  period: String
  location: String
  salary: String
  type: String
}

input CreateMeetInput {
  title: String!
  content: String!
  category: String!
  price: String
  period: String
  location: String
  maximum: String!
  OwnerId: Int!
}

input EditMeetInput {
  id: Int!
  title: String
  content: String
  price: String
  period: String
  location: String
  maximum: String
}

type Subscription {
  dmSubscription(ChatId: Int!): Dm!
  memberOut(chatId: Int!): ChatOutReturn!
  getDm(userId: Int!): Dm!
}
